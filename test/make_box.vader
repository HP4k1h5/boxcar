~ Test make box

=====================================

Given (an empty code block):
  ```
  
  ```

Execute (put cursor inside and make box):
  call cursor(2, 1)
  call boxcar#box#make()

Expect (a box):
  ```
  ┏━┓
  ┃ ┃
  ┗━┛
  ```
" Execute (expect cursor to be inside block):
"   AssertEqual [3, 2], getpos('.')[1:2] 


=====================================

Given (an empty code block with several lines):
  ```
  
  
  
  ```

Execute (put cursor inside and make box):
  call cursor(3, 1)
  call boxcar#box#make()

Expect (a box):
  ```
  
  ┏━┓
  ┃ ┃
  ┗━┛
  ```
" Execute (expect cursor to be inside block):
"   AssertEqual [3, 2], getpos('.')[1:2] 


=====================================


Given (an empty code block):
  ```
  
  ```

Execute (put cursor on top fence and expect error state):
  call cursor(1, 1)
  AssertThrows boxcar#box#make()

Expect (no box):
  ```
  
  ```


=====================================

Given (a code block with a cursor to the right):
  ```
       <-- leave 5 blank spaces
  a
  a
  ```

Execute (call cursor on top of <):
  call cursor(2, 6)
  call boxcar#box#make()

Expect (a box to the right of left margin and to the left of the arrow):
  ```
       ┏━┓<-- leave 5 blank spaces
  a    ┃ ┃
  a    ┗━┛
  ```


=====================================

Given (a code block with a box to the left and blank spaces):
  ```
    ┏━┓   <-- leave 3 blank spaces
    ┃a┃
    ┗━┛
  ```

Execute (call cursor on top of left arrow):
  call cursor(2, 9)
  call boxcar#box#make()

Expect (a box to the right):
  ```
    ┏━┓   ┏━┓<-- leave 3 blank spaces
    ┃a┃   ┃ ┃
    ┗━┛   ┗━┛
  ```


=====================================

Given (a code block with a box to the left):
  ```
    ┏━┓
    ┃a┃
    ┗━┛
  ```

Execute (call cursor on top of left arrow):
  call cursor(2, 6)
  call boxcar#box#make()

Expect (a box to the immediately to the right):
  ```
    ┏━┓┏━┓
    ┃a┃┃ ┃
    ┗━┛┗━┛
  ```


=====================================
Given (different boxes):
  ```
     ┏━┓
  ┏━┓┃a┃
  ┃b┃┗━┛ 
  ┗━┛
  ```

Execute (call cursor between them vertically and make box):
  call cursor(4,8)
  call boxcar#box#make()

Expect (a box that extends down beneath them):
  ```
     ┏━┓
  ┏━┓┃a┃
  ┃b┃┗━┛ ┏━┓
  ┗━┛    ┃ ┃
         ┗━┛
  ```


=====================================

Given (a code block with a box to the right):
  ```
    ┏━┓
    ┃g┃
    ┗━┛
  ```

Execute (call cursor to the left of the box):
  call cursor(2, 1)
  call boxcar#box#make()

Expect (a box to the left with all of my things):
  ```
  ┏━┓  ┏━┓
  ┃ ┃  ┃g┃
  ┗━┛  ┗━┛
  ```


=====================================


Given (a code block with a box to the right):
  ```
  ┏━┓
  ┃a┃
  ┗━┛
  ```

Execute (call cursor to the left of and down from the box):
  call cursor(3, 1)
  call boxcar#box#make()

Expect (a box to the to the left and down):
  ```
     ┏━┓
  ┏━┓┃a┃
  ┃ ┃┗━┛
  ┗━┛
  ```


=====================================
