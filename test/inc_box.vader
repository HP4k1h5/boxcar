~ test increment box
~ ! called from resize which calls s:increment

Given (a box):
  ```
  ┏━┓
  ┃ ┃
  ┗━┛
  ```

Execute (put cursor in box and inc):
  call cursor(3,4)
  call boxcar#box#resize(0, 1, 0)

Expect (a bigger box):
  ```
  ┏━━┓
  ┃  ┃
  ┗━━┛
  ```

Given (a box and newlines):
  ```
  
  ┏━┓
  ┃ ┃
  ┗━┛

  ```

Execute (put cursor in box and inc):
  call cursor(4,4)
  call boxcar#box#resize(0, 1, 0)

Expect (a bigger box):
  ```
  
  ┏━━┓
  ┃  ┃
  ┗━━┛

  ```

Given (a bigger box):
  ```
  
        ┏━━┓
        ┃  ┃
        ┗━━┛
  ```

Execute (put cursor in box and inc):
  call cursor(4,11)
  call boxcar#box#resize(0, 1, 0)

Expect (an even bigger box in the right place):
  ```
  
        ┏━━━┓
        ┃   ┃
        ┗━━━┛
  ```


=============================
Given (a bigger box):
  ```
      ┏━━┓
      ┃  ┃
      ┃  ┃
      ┃  ┃
      ┗━━┛
  ```

Execute (put cursor in box and inc by more than 1):
  call cursor(4,8)
  call boxcar#box#resize(0, 9, 0)

Expect (an even bigger box in the right place):
  ```
      ┏━━━━━━━━━━━┓
      ┃           ┃
      ┃           ┃
      ┃           ┃
      ┗━━━━━━━━━━━┛
  ```



=============================
Given (a bigger box):
  ```
  
      ┏━━━━━━━━━┓
      ┃ abc     ┃
      ┃      xyw┃
      ┗━━━━━━━━━┛
  
  ```

Execute (put cursor in box and inc by more than 1):
  call cursor(5,16)
  call boxcar#box#resize(1, 9, 0)
  " check that cursor has not moved
  AssertEqual getpos('.'), [0,5,16,0]

Expect (an even bigger box in the right place):
  ```
  
      ┏━━━━━━━━━━━━━━━━━━┓
      ┃ abc              ┃
      ┃      xyw         ┃
      ┃                  ┃
      ┗━━━━━━━━━━━━━━━━━━┛
  
  ```


=============================
Given (two boxes side-by-side):
  ```
  
      ┏━━━━━━━━━┓
      ┃ abc     ┃
      ┃      xyw┃
      ┗━━━━━━━━━┛
  
  ```

Execute (put cursor in box and inc by more than 1):
  call cursor(5,16)
  call boxcar#box#resize(1, 9, 0)
  " check that cursor has not moved
  AssertEqual getpos('.'), [0,5,16,0]

Expect (an even bigger box in the right place):
  ```
  
      ┏━━━━━━━━━━━━━━━━━━┓
      ┃ abc              ┃
      ┃      xyw         ┃
      ┃                  ┃
      ┗━━━━━━━━━━━━━━━━━━┛
  
  ```

